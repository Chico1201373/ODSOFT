plugins {
  id 'org.springframework.boot' version '3.2.5'
  id 'io.spring.dependency-management' version '1.1.4'
  id 'java'
  id 'jacoco'
}

group = 'pt.psoft.g1'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // OpenAPI & Swagger UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // MapStruct (mapper)
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    // Binding Lombok <-> MapStruct (requis depuis Lombok 1.18.16)
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // DB
    runtimeOnly 'com.h2database:h2'

    // HTML sanitizer
    implementation 'com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:20220608.1'

    // Tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.10.2'
    // (Inutile dâ€™ajouter junit:junit explicitement ; Spring Boot 3 utilise JUnit Jupiter)
}

tasks.named('test') { useJUnitPlatform() }

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    failOnError = false
}
tasks.register('generateJavadoc', Javadoc) {
    group = 'Documentation'
    description = 'Generates Javadoc API documentation.'
    source = sourceSets.main.allJava
    classpath = sourceSets.main.compileClasspath
    destinationDir = file("$buildDir/docs/javadoc")
    options.encoding = 'UTF-8'
    options.memberLevel = JavadocMemberLevel.PUBLIC
    options.author = true
    options.version = true
}